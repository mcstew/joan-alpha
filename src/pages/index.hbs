<!DOCTYPE html>
<html>
<head>
  <title>Joan [Alpha]</title>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f9f9f9;
    }
    #chat-container {
      max-width: 960px;
      margin: auto;
      padding: 20px;
      background-color: #ffffff;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }
    #chat-output {
      height: 400px;
      overflow-y: scroll;
      border: 2px solid #ccc; /* Thicker border */
      padding: 20px;
      margin-bottom: 20px;
    }
    #chat-input {
      width: 80%;
      padding: 10px;
    }
    button {
      width: 18%;
      padding: 11px;
      margin-top: 11px;
      background-color: #6c757d;
      color: white;
      border: none;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }
    button:hover {
      background-color: #5a6268;
    }
    button:active {
      background-color: #4e555b;
    }
    .chat-row {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 10px;
    }
    .chat-message {
      flex: 1;
    }
    .chat-timestamp {
      flex: 0;
      margin-left: 20px;
      color: #aaa;
      font-size: 0.8em;
    }
  </style>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>
  <div id="chat-container">
    <h1>Joan Alpha Test</h1>
    <div id="chat-output"></div>
    <div>
      <input type="text" id="chat-input" />
      <button onclick="sendMessage()">Send</button>
    </div>
  </div>

<script>
function sendMessage() {
  console.log("Sending message...");
  const chatInput = document.getElementById("chat-input");
  const chatOutput = document.getElementById("chat-output");
  const userInput = chatInput.value;
  const serverUrl = "https://sea-lion-app-ks8ko.ondigitalocean.app/api/chat";
  
  // Get current time without seconds
  const now = new Date();
  const timestamp = now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });

  // Display the user's message immediately
  chatOutput.innerHTML += `
    <div class="chat-row">
      <div class="chat-message"><strong>User:</strong> ${userInput}</div>
      <div class="chat-timestamp" style="white-space: nowrap;">${timestamp}</div>
    </div>`;
  chatOutput.scrollTop = chatOutput.scrollHeight;

  // Initialize the "Joan is typing..." placeholder
  let typingDots = '.';
  
  // Delay the "Joan is typing..." placeholder by 500ms
  setTimeout(() => {
    const typingPlaceholder = `<div class="chat-row" id="typing-placeholder">
      <div class="chat-message"><strong>Joan:</strong><span id="typing-dots">.</span></div>
      <div class="chat-timestamp" style="white-space: nowrap;"></div>
    </div>`;
    chatOutput.innerHTML += typingPlaceholder;
    chatOutput.scrollTop = chatOutput.scrollHeight;

    // Add dots at one-second intervals
    const typingInterval = setInterval(() => {
      typingDots += '.';
      if (typingDots.length > 3) typingDots = '.';
      document.getElementById("typing-dots").innerText = typingDots;
    }, 1000);

    axios.post(serverUrl, { userInput: userInput })
      .then((response) => {
        // Remove the "Joan is typing..." placeholder and stop the interval
        clearInterval(typingInterval);
        document.getElementById("typing-placeholder").remove();

        const botReply = response.data.message;
        chatOutput.innerHTML += `
          <div class="chat-row">
            <div class="chat-message"><strong>Joan:</strong> ${botReply}</div>
            <div class="chat-timestamp" style="white-space: nowrap;">${timestamp}</div>
          </div>`;
        chatOutput.scrollTop = chatOutput.scrollHeight;
      })
      .catch((error) => {
        console.error("Error:", error);
        // Remove the "Joan is typing..." placeholder and stop the interval
        clearInterval(typingInterval);
        document.getElementById("typing-placeholder").remove();
        chatOutput.innerHTML += `<p><strong>Joan:</strong> Sorry, I couldn't process that request.</p>`;
      });

  }, 500);

  chatInput.value = "";
}
    // Add this at the end of your script to re-add the event listener
  document.getElementById("chat-input").addEventListener("keyup", function(event) {
    if (event.key === "Enter") {
      event.preventDefault();
      sendMessage();
    }
  });
</script>  
</body>
</html>
